# -*- coding: utf-8 -*-
"""PolynomeException.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10IrscDM4kUOZjT2UuHRdBV4vYr6lN6p5
"""

def is_cplx(x):
  if (type(x) == complex):
     x = x.real 
  else:
     a = x.real
     return x

def neg(x):
  if (x < 0):
    x = abs(x)
  else:
    x = abs(x) 
    return x

def max_nb(x, borne):
  #### Si le nombre de digit est > à la borne alors 
  if (len(str(x)) > borne ) : #### SI la longeur de la valeur numérique et stictement > à la borne
    while((len(str(x)) > borne)): 
      print("Le nombre saisie comporte plus de {} digit, Veuillez le resaisir.".format(borne)) ####Affiche un message d'erreur
      x = int(input()) #### Resaisir la valeur
  else:
    pass
  return x

def poly(x):
    c = x**3-(1.5*(x**2))-(6*x)+5
    return c

def polynome(x):#### Création de la fonction Pytagore
  #### Cas 1: Variable entrée est un caractère
  ############################################################################################

  if (type(x)==str):
    print("Veuillez saisir un valeur numérique:")
    x = int(input())
  ###########################################################################################
  #### Cas 2: Complexe
  ###########################################################################################
  elif (type(x) == complex): ###### Si x est un nombre complexe
    is_cplx(x)
    print(is_cplx(x))
    a = is_cplx(x) #### Partie réelle du nombre complexe
  
  ###########################################################################################
  #### Cas 3: Entier Négatif
  ###########################################################################################
  elif (type(x) in [int, float]):
    a = neg(x)#### Valeur absolue de x


  ###########################################################################################
  #### Cas 4: Longeur de la variable 
  ###########################################################################################
  elif (len(str(x)) > 16): #### Si la longeur de x est supérieure à 16
    max_nb(x)
    x = max_nb(x) #### J'affiche x

  return poly(x) # ##### Retourner hypothénuse d'un triangle rectangle (Appel à la fonction calcul)

polynome(5)





